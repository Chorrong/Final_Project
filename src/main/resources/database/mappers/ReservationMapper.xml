<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.spring.app.reservation.ReservationDAO">
  

  
  
   <select id="selectReservation"
          parameterType="long"
          resultType="ReservationVO">
    SELECT *
    FROM RESERVATION
    WHERE reservation_id = #{reservationId}
  </select>
  
  
    <!-- 2) 일정별 예약 목록 조회 -->
  <select id="selectBySchedule"
          parameterType="long"
          resultType="ReservationVO">
    SELECT *
    FROM RESERVATION
    WHERE schedule_id = #{scheduleId}
    ORDER BY created_at DESC
  </select>
  
  
<insert id="insertReservation"
        parameterType="com.spring.app.reservation.ReservationVO"
        useGeneratedKeys="true"
        keyProperty="reservationId">
  <!-- 구독 활성 사용자만 INSERT -->
  INSERT INTO RESERVATION
    (USERNAME, SCHEDULE_ID, FACILITY_ID, CREATED_AT)
  SELECT
    #{username},
    #{scheduleId},
    #{facilityId},
    NOW()
  FROM DUAL
  WHERE EXISTS (
    SELECT 1
      FROM MEMBER_SUBSCRIPT
     WHERE USERNAME         = #{username}
       AND SUBSCRIPT_STATUS = 'ACTIVE'
       AND CURDATE() BETWEEN START_DATE AND END_DATE
  )
</insert>
  
    <!-- 4) 예약 취소 처리 -->
  <update id="cancelReservation"
          parameterType="ReservationVO">
    UPDATE RESERVATION
       SET CANCELED_AT     = #{canceledAt},
           CANCELED_REASON = #{canceledReason}
     WHERE RESERVATION_ID = #{reservationId}
  </update>
  
  
    <!-- 페이징을 적용한 예약 목록 조회 -->
    <select id="getReservationsByUsernameWithPaging" 
            parameterType="map" 
            resultType="ReservationVO">
        SELECT RESERVATION_ID as reservationId,
               SCHEDULE_ID as scheduleId,
               FACILITY_ID as facilityId,
               USERNAME,
               CREATED_AT as createdAt,
               CANCELED_AT as canceledAt,
               CANCELED_REASON as canceledReason
        FROM RESERVATION 
        WHERE USERNAME = #{username}
        ORDER BY CREATED_AT DESC
        LIMIT #{startRow}, #{pageSize}
    </select>
  
  <!-- 사용자의 전체 예약 개수 조회 -->
      <select id="countReservationsByUsername" parameterType="String" resultType="long">
        SELECT COUNT(*) 
        FROM RESERVATION 
        WHERE USERNAME = #{username}
    </select>
  
  
  
  
  
  
  
  
  
  
  
<select id="selectMember" resultType="map">
    SELECT
        R.RESERVATION_ID AS reservationId,
        R.SCHEDULE_ID AS scheduleId,
        F.NAME AS facilityName,
        S.SCHEDULE_DATE AS scheduleDate,
        S.START_TIME AS startTime,
        S.END_TIME AS endTime,
        U.NAME AS trainerName          
    FROM RESERVATION R
    JOIN SCHEDULE S ON R.SCHEDULE_ID = S.SCHEDULE_ID
    JOIN FACILITY F ON S.FACILITY_ID = F.FACILITY_ID
    JOIN USER U ON S.USERNAME = U.USERNAME    
    WHERE R.USERNAME = #{username}
    AND R.CANCELED_AT IS NULL
</select>

<select id="selectOneMember" resultMap="reserveOfScheduleMap">
	SELECT
		R.RESERVATION_ID,
		R.USERNAME,
		R.SCHEDULE_ID,
		R.FACILITY_ID,
		R.CANCELED_REASON,
		S.USERNAME AS TRAINER_ID,
		S.SCHEDULE_DATE,
		S.START_TIME,
		S.END_TIME,
		F.NAME AS FACILITY_NAME,
		F.LOCATION,
		U.NAME,
		T.NAME AS TRAINER_NAME
	  FROM RESERVATION R
	  LEFT OUTER JOIN SCHEDULE S ON R.SCHEDULE_ID=S.SCHEDULE_ID
	  LEFT OUTER JOIN FACILITY F ON R.FACILITY_ID=F.FACILITY_ID
	  LEFT OUTER JOIN USER U ON R.USERNAME=U.USERNAME
	  LEFT OUTER JOIN USER T ON S.USERNAME=T.USERNAME
	 WHERE R.RESERVATION_ID=#{reservationId}
</select>

<resultMap type="ReservationVO" id="reserveOfScheduleMap">
	<id column="RESERVATION_ID" property="reservationId"/>
	<result column="USERNAME" property="username"/>
	<result column="SCHEDULE_ID" property="scheduleId"/>
	<result column="FACILITY_ID" property="facilityId"/>
	<result column="CANCELED_REASON" property="canceledReason"/>
	<association javaType="ScheduleVO" property="scheduleVO">
		<result column="TRAINER_ID" property="username"/>
		<result column="SCHEDULE_DATE" property="scheduleDate"/>
		<result column="START_TIME" property="startTime"/>
		<result column="END_TIME" property="endTime"/>
		<association javaType="UserVO" property="userVO">
			<result column="TRAINER_NAME" property="name"/>
		</association>
	</association>
	<association javaType="FacilityVO" property="facilityVO">
		<result column="FACILITY_NAME" property="name"/>
		<result column="LOCATION" property="location"/>
	</association>
	<association javaType="UserVO" property="userVO">
		<result column="Name" property="name"/>
	</association>
	
</resultMap>
  

 	<!--같은회원이 같은 일정 예약 못하게 방지 -->
  <select id="countByUserAndSchedule" resultType="int">
    SELECT COUNT(*)
    FROM RESERVATION
    WHERE USERNAME      = #{username}
      AND SCHEDULE_ID   = #{scheduleId}
      AND CANCELED_AT IS NULL
  </select>


	<!--  -->
	<select id="countByUsernameAndMonth" resultType="int">
		SELECT COUNT(*)
		FROM RESERVATION
		WHERE USERNAME =#{username}
		AND YEAR(CREATED_AT) =#{year}
		AND MONTH(CREATED_AT) =#{month}
		AND CANCELED_AT IS NULL 
	</select>




  
  
  
  	
  </mapper>
