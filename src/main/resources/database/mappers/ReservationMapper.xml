<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.spring.app.reservation.ReservationDAO">
  

  
  
   <select id="selectReservation"
          parameterType="long"
          resultType="ReservationVO">
    SELECT *
    FROM RESERVATION
    WHERE reservation_id = #{reservationId}
  </select>
  
  
    <!-- 2) 일정별 예약 목록 조회 -->
  <select id="selectBySchedule"
          parameterType="long"
          resultType="ReservationVO">
    SELECT *
    FROM RESERVATION
    WHERE schedule_id = #{scheduleId}
    ORDER BY created_at DESC
  </select>
  
  
<insert id="insertReservation"
        parameterType="com.spring.app.reservation.ReservationVO"
        useGeneratedKeys="true"
        keyProperty="reservationId">
  <!-- 구독 활성 사용자만 INSERT -->
  INSERT INTO RESERVATION
    (USERNAME, SCHEDULE_ID, FACILITY_ID, CREATED_AT)
  SELECT
    #{username},
    #{scheduleId},
    #{facilityId},
    NOW()
  FROM DUAL
  WHERE EXISTS (
    SELECT 1
      FROM MEMBER_SUBSCRIPT
     WHERE USERNAME         = #{username}
       AND SUBSCRIPT_STATUS = 'ACTIVE'
       AND CURDATE() BETWEEN START_DATE AND END_DATE
  )
</insert>
  
    <!-- 4) 예약 취소 처리 -->
  <update id="cancelReservation"
          parameterType="ReservationVO">
    UPDATE RESERVATION
       SET CANCELED_AT     = #{canceledAt},
           CANCELED_REASON = #{canceledReason}
     WHERE RESERVATION_ID = #{reservationId}
  </update>
  
  
  
  <select id="selectByUsername" parameterType="string" resultType="ReservationVO">
  SELECT * FROM RESERVATION 
  WHERE USERNAME =#{username}
  
  </select>
  
  
  <select id="selectMember" resultType="map">
    SELECT
      R.RESERVATION_ID   AS reservationId,
      R.SCHEDULE_ID      AS scheduleId,
      F.NAME             AS facilityName,
      S.SCHEDULE_DATE    AS scheduleDate,
      S.START_TIME       AS startTime,
      S.END_TIME         AS endTime
    FROM RESERVATION R
      JOIN SCHEDULE  S ON R.SCHEDULE_ID = S.SCHEDULE_ID
      JOIN FACILITY  F ON S.FACILITY_ID = F.FACILITY_ID
    WHERE R.USERNAME    = #{username}
      AND R.CANCELED_AT IS NULL
  </select>
  

 	<!--같은회원이 같은 일정 예약 못하게 방지 -->
  <select id="countByUserAndSchedule" resultType="int">
    SELECT COUNT(*)
    FROM RESERVATION
    WHERE USERNAME      = #{username}
      AND SCHEDULE_ID   = #{scheduleId}
      AND CANCELED_AT IS NULL
  </select>


	<!--  -->
	<select id="countByUsernameAndMonth" resultType="int">
		SELECT COUNT(*)
		FROM RESERVATION
		WHERE USERNAME =#{username}
		AND YEAR(CREATED_AT) =#{year}
		AND MONTH(CREATED_AT) =#{month}
		AND CANCELED_AT IS NULL 
	</select>




  
  
  
  	
  </mapper>
