<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.app.board.qna.QnaDAO">

  <!-- ▶ resultMap: QNA 테이블 컬럼 → QnaVO 필드 매핑 -->
  <resultMap id="QnaResultMap" type="com.spring.app.board.qna.QnaVO">
    <id     column="BOARD_NUM"      property="boardNum"      jdbcType="BIGINT"/>
    <result column="USERNAME"       property="userName"      jdbcType="VARCHAR"/>
    <result column="BOARD_TITLE"    property="boardTitle"    jdbcType="VARCHAR"/>
    <result column="BOARD_DATE"     property="boardDate"     jdbcType="TIMESTAMP"/>
    <result column="BOARD_CONTENTS" property="boardContents" jdbcType="LONGVARCHAR"/>
    <result column="BOARD_DEPTH"    property="boardDepth"    jdbcType="BIGINT"/>
    <result column="BOARD_REF"      property="boardRef"      jdbcType="BIGINT"/>
    <result column="BOARD_STEP"     property="boardStep"     jdbcType="BIGINT"/>
    <result column="IS_SECRET"      property="isSecret"      jdbcType="INTEGER"/>
  </resultMap>

  <!-- 1) Q&A 원글 작성 -->
  <insert id="insertQna" parameterType="com.spring.app.board.qna.QnaVO" useGeneratedKeys="true" keyProperty="boardNum" keyColumn="BOARD_NUM">
    INSERT INTO QNA
      (USERNAME,
       BOARD_TITLE,
       BOARD_DATE,
       BOARD_CONTENTS,
       BOARD_DEPTH,
       BOARD_REF,
       BOARD_STEP,
       IS_SECRET)
    VALUES
      (#{userName},
       #{boardTitle},
       CURRENT_TIMESTAMP,
       #{boardContents},
       #{boardDepth},
       #{boardRef},
       #{boardStep},
       #{isSecret})
  </insert>

  <!-- 2) 답글 작성 전 같은 그룹 내 step 밀어내기 -->
  <update id="updateStepForReply" parameterType="com.spring.app.board.qna.QnaVO">
    UPDATE QNA
      SET BOARD_STEP = BOARD_STEP + 1
    WHERE BOARD_REF = #{boardRef}
      AND BOARD_STEP > #{boardStep}
  </update>

  <!-- 3) 전체 게시물 수 조회 -->
  <select id="selectQnaCount" resultType="int">
    SELECT COUNT(*)
      FROM QNA
  </select>

  <!-- 4) 페이징 처리된 게시물 목록 조회 -->
  <select id="selectQnaList" parameterType="map" resultMap="QnaResultMap">
    SELECT
      BOARD_NUM,
      USERNAME,
      BOARD_TITLE,
      BOARD_DATE,
      BOARD_CONTENTS,
      BOARD_DEPTH,
      BOARD_REF,
      BOARD_STEP,
      IS_SECRET
    FROM QNA
    ORDER BY BOARD_REF DESC, BOARD_STEP ASC
    LIMIT #{offset}, #{limit}
  </select>

  <!-- 5) 특정 글 상세 조회 -->
  <select id="selectQnaById" parameterType="long" resultMap="QnaResultMap">
    SELECT
      BOARD_NUM,
      USERNAME,
      BOARD_TITLE,
      BOARD_DATE,
      BOARD_CONTENTS,
      BOARD_DEPTH,
      BOARD_REF,
      BOARD_STEP,
      IS_SECRET
    FROM QNA
    WHERE BOARD_NUM = #{boardNum}
  </select>

  <!-- 6) 글 수정 -->
  <update id="updateQna" parameterType="com.spring.app.board.qna.QnaVO">
    UPDATE QNA
      SET BOARD_TITLE    = #{boardTitle},
          BOARD_CONTENTS = #{boardContents},
          IS_SECRET      = #{isSecret}
    WHERE BOARD_NUM = #{boardNum}
  </update>

  <!-- 7) 글 삭제 -->
  <delete id="deleteQna" parameterType="long">
    DELETE FROM QNA
    WHERE BOARD_NUM = #{boardNum}
  </delete>

</mapper>