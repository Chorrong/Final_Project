<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.app.board.BoardDAO">

  <!-- ★ resultMap: BOARD → BoardVO -->
  <resultMap id="BoardResultMap" type="com.spring.app.board.BoardVO">
    <id     column="BOARD_NUM"       property="boardNum"       jdbcType="BIGINT"/>
    <result column="USERNAME"        property="userName"      jdbcType="VARCHAR"/>
    <result column="BOARD_TITLE"     property="boardTitle"    jdbcType="VARCHAR"/>
    <result column="BOARD_DATE"      property="boardDate"     jdbcType="TIMESTAMP"/>
    <result column="BOARD_CONTENTS"  property="boardContents" jdbcType="LONGVARCHAR"/>
    <result column="CATEGORY"        property="category"      jdbcType="BIGINT"/>
    <result column="UPDATE_AT"       property="updateAt"      jdbcType="TIMESTAMP"/>
    <result column="BOARD_HITS"      property="boardHits"     jdbcType="BIGINT"/>
    <result column="LIKE_COUNT"      property="likeCount"     jdbcType="BIGINT"/>
    <result column="COMMENT_COUNT"   property="commentCount"  jdbcType="BIGINT"/>
    <result column="IS_SECRET"       property="isSecret"      jdbcType="INTEGER"/>
  </resultMap>

  <!-- 1) 게시글 전체 개수 조회 -->
  <select id="getTotalCount"
          parameterType="com.spring.app.home.util.Pager"
          resultType="java.lang.Long">
    SELECT COUNT(*)
      FROM BOARD
    <where>
      <if test="searchField != null and searchWord != null and searchWord != ''">
        ${searchField} LIKE CONCAT('%', #{searchWord}, '%')
      </if>
    </where>
  </select>

  <!-- 2) 게시글 목록 조회 -->
  <select id="getList"
          parameterType="com.spring.app.home.util.Pager"
          resultMap="BoardResultMap">
    SELECT
      BOARD_NUM,
      USERNAME,
      BOARD_TITLE,
      BOARD_DATE,
      BOARD_CONTENTS,
      CATEGORY,
      UPDATE_AT,
      BOARD_HITS,
      LIKE_COUNT,
      COMMENT_COUNT
    FROM BOARD
    <where>
      <if test="searchField != null and searchWord != null and searchWord != ''">
        ${searchField} LIKE CONCAT('%', #{searchWord}, '%')
      </if>
    </where>
    ORDER BY BOARD_DATE DESC, BOARD_NUM DESC
    LIMIT #{startRow}, #{pageSize}
  </select>

  <!-- 3) 게시글 상세 조회 -->
  <select id="getDetail"
          parameterType="com.spring.app.board.BoardVO"
          resultMap="BoardResultMap">
    SELECT *
      FROM BOARD
    WHERE BOARD_NUM = #{boardNum}
      AND (
           IS_SECRET = 0
           OR #{userName} = 'admin'
           OR USERNAME = #{userName}
          )
  </select>

  <!-- 4) 게시글 등록 -->
  <insert id="add"
          parameterType="com.spring.app.board.BoardVO"
          useGeneratedKeys="true"
          keyProperty="boardNum"
          keyColumn="BOARD_NUM">
    INSERT INTO BOARD
      (USERNAME, BOARD_TITLE, BOARD_DATE, BOARD_CONTENTS, CATEGORY, UPDATE_AT, BOARD_HITS, LIKE_COUNT, COMMENT_COUNT, IS_SECRET)
    VALUES
      (#{userName}, CURRENT_TIMESTAMP, #{boardTitle}, #{boardContents}, #{category}, CURRENT_TIMESTAMP, 0, 0, 0, #{isSecret})
  </insert>

  <!-- 5) 게시글 수정 -->
  <update id="update"
          parameterType="com.spring.app.board.BoardVO">
    UPDATE BOARD
      SET BOARD_TITLE    = #{boardTitle},
          BOARD_CONTENTS = #{boardContents},
          CATEGORY       = #{category},
          UPDATE_AT      = CURRENT_TIMESTAMP,
          IS_SECRET      = #{isSecret}
    WHERE BOARD_NUM = #{boardNum}
      AND (
           #{userName} = 'admin'
           OR USERNAME = #{userName}
          )
  </update>

  <!-- 6) 게시글 삭제 -->
  <delete id="delete"
          parameterType="com.spring.app.board.BoardVO">
    DELETE FROM BOARD
    WHERE BOARD_NUM = #{boardNum}
      AND (
           #{userName} = 'admin'
           OR USERNAME = #{userName}
          )
  </delete>

  <!-- 7) 조회수 증가 -->
  <update id="hitUpdate"
          parameterType="com.spring.app.board.BoardVO">
    UPDATE BOARD
      SET BOARD_HITS = BOARD_HITS + 1
    WHERE BOARD_NUM = #{boardNum}
  </update>

  <!-- 8) 첨부파일 등록 -->
  <insert id="addFile"
          parameterType="com.spring.app.board.BoardFileVO"
          useGeneratedKeys="true"
          keyProperty="fileNum"
          keyColumn="FILE_NUM">
    INSERT INTO BOARD_FILE
      (BOARD_NUM, FILE_NAME, ORI_NAME)
    VALUES
      (#{boardNum}, #{fileName}, #{oriName})
  </insert>

  <!-- 9) 첨부파일 목록 조회 -->
  <select id="getFileList"
          parameterType="com.spring.app.board.BoardVO"
          resultType="com.spring.app.board.BoardFileVO">
    SELECT *
      FROM BOARD_FILE
    WHERE BOARD_NUM = #{boardNum}
    ORDER BY FILE_NUM ASC
  </select>

  <!-- 10) 첨부파일 상세 조회 -->
  <select id="getFileDetail"
          parameterType="com.spring.app.board.BoardFileVO"
          resultType="com.spring.app.board.BoardFileVO">
    SELECT *
      FROM BOARD_FILE
    WHERE FILE_NUM = #{fileNum}
      AND BOARD_NUM = #{boardNum}
  </select>

  <!-- 11) 첨부파일 삭제 -->
  <delete id="deleteFile"
          parameterType="com.spring.app.board.BoardFileVO">
    DELETE FROM BOARD_FILE
    WHERE FILE_NUM = #{fileNum}
      AND BOARD_NUM = #{boardNum}
  </delete>

  <!-- 12) 파일 개수 조회 -->
  <select id="getFileCount"
          parameterType="java.lang.Long"
          resultType="java.lang.Integer">
    SELECT COUNT(*)
      FROM BOARD_FILE
    WHERE BOARD_NUM = #{boardNum}
  </select>

  <!-- 13) 좋아요 추가 -->
  <insert id="addInteraction"
          parameterType="com.spring.app.board.interaction.InteractionVO">
    INSERT INTO BOARD_INTERACTION (USERNAME, BOARD_NUM, TYPE)
    VALUES (#{userName}, #{boardNum}, #{type})
  </insert>

  <!-- 14) 좋아요 삭제 -->
  <delete id="removeInteraction"
          parameterType="com.spring.app.board.interaction.InteractionVO">
    DELETE FROM BOARD_INTERACTION
    WHERE USERNAME  = #{userName}
      AND BOARD_NUM = #{boardNum}
      AND TYPE      = #{type}
  </delete>

  <!-- 15) 좋아요 개수 조회 -->
  <select id="getInteractionCount"
          parameterType="com.spring.app.board.interaction.InteractionVO"
          resultType="java.lang.Long">
    SELECT COUNT(*)
      FROM BOARD_INTERACTION
    WHERE BOARD_NUM = #{boardNum}
      AND TYPE      = #{type}
  </select>

  <!-- 16) 좋아요 여부 확인 -->
  <select id="isLiked"
          parameterType="com.spring.app.board.interaction.InteractionVO"
          resultType="java.lang.Integer">
    SELECT COUNT(*)
      FROM BOARD_INTERACTION
    WHERE USERNAME  = #{userName}
      AND BOARD_NUM = #{boardNum}
      AND TYPE      = #{type}
  </select>

  <!-- 17) 댓글 추가 -->
  <insert id="addComment"
          parameterType="com.spring.app.board.comment.CommentVO"
          useGeneratedKeys="true"
          keyProperty="commentId"
          keyColumn="COMMENT_ID">
    INSERT INTO COMMENTS (BOARD_NUM, USERNAME, COMMENT_CONTENTS, COMMENT_DATE)
    VALUES (#{boardNum}, #{userName}, #{commentContents}, CURRENT_TIMESTAMP)
  </insert>

  <!-- 18) 댓글 삭제 -->
  <delete id="deleteComment"
          parameterType="com.spring.app.board.comment.CommentVO">
    DELETE FROM COMMENTS
    WHERE COMMENT_ID = #{commentId}
      AND BOARD_NUM  = #{boardNum}
      AND (
           #{userName} = 'admin'
           OR USERNAME = #{userName}
          )
  </delete>

  <!-- 19) 댓글 목록 조회 -->
  <select id="getCommentList"
          parameterType="java.lang.Long"
          resultType="com.spring.app.board.comment.CommentVO">
    SELECT *
      FROM COMMENTS
    WHERE BOARD_NUM = #{boardNum}
    ORDER BY COMMENT_DATE ASC, COMMENT_ID ASC
  </select>

  <!-- 20) 비밀글 설정 -->
  <update id="updateSecret"
          parameterType="com.spring.app.board.BoardVO">
    UPDATE BOARD
      SET IS_SECRET = #{isSecret}
    WHERE BOARD_NUM = #{boardNum}
  </update>

  <!-- 21) 비밀글 확인 -->
  <select id="checkSecret"
          parameterType="com.spring.app.board.BoardVO"
          resultType="java.lang.Boolean">
    SELECT CASE WHEN IS_SECRET = 1 THEN TRUE ELSE FALSE END
      FROM BOARD
    WHERE BOARD_NUM = #{boardNum}
  </select>

</mapper>
