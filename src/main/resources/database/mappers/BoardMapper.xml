<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.app.board.BoardDAO">

  <!-- 1) 게시글 등록 -->
  <insert id="add" parameterType="com.spring.app.board.BoardVO" useGeneratedKeys="true" keyProperty="boardNum" keyColumn="BOARD_NUM">
    INSERT INTO BOARD (
      USERNAME, 
      BOARD_TITLE, 
      BOARD_CONTENTS, 
      CATEGORY, 
      BOARD_DATE, 
      UPDATE_AT, 
      BOARD_HITS, 
      LIKE_COUNT, 
      COMMENT_COUNT,
      IS_SECRET
    ) VALUES (
      #{userName}, 
      #{boardTitle}, 
      #{boardContents}, 
      #{category}, 
      CURRENT_TIMESTAMP, 
      CURRENT_TIMESTAMP, 
      0, 0, 0,
      #{isSecret}
    )
  </insert>

  <!-- 2) 게시글 전체 개수 조회 -->
  <select id="getTotalCount" parameterType="com.spring.app.home.util.Pager" resultType="long">
    SELECT COUNT(*) FROM BOARD
    <where>
      <if test="searchField != null and searchWord != null and searchWord != ''">
        ${searchField} LIKE CONCAT('%', #{searchWord}, '%')
      </if>
    </where>
  </select>

  <!-- 3) 게시글 목록 조회 (최신순 정렬) -->
  <select id="getList" parameterType="com.spring.app.home.util.Pager" resultMap="BoardResultMap">
    SELECT 
      BOARD_NUM,
      USERNAME,
      BOARD_TITLE,
      BOARD_CONTENTS,
      CATEGORY,
      BOARD_DATE,
      UPDATE_AT,
      BOARD_HITS,
      LIKE_COUNT,
      COMMENT_COUNT,
      IS_SECRET
    FROM BOARD
    <where>
      <if test="searchField != null and searchWord != null and searchWord != ''">
        ${searchField} LIKE CONCAT('%', #{searchWord}, '%')
      </if>
    </where>
    ORDER BY BOARD_DATE DESC, BOARD_NUM DESC
    LIMIT #{startRow}, #{pageSize}
  </select>

  <!-- 4) 게시글 상세 조회 -->
  <select id="getDetail" parameterType="com.spring.app.board.BoardVO" resultMap="BoardResultMap">
    SELECT 
      BOARD_NUM,
      USERNAME,
      BOARD_TITLE,
      BOARD_CONTENTS,
      CATEGORY,
      BOARD_DATE,
      UPDATE_AT,
      BOARD_HITS,
      LIKE_COUNT,
      COMMENT_COUNT,
      IS_SECRET
    FROM BOARD
    WHERE BOARD_NUM = #{boardNum}
  </select>

  <!-- 5) 게시글 resultMap -->
  <resultMap id="BoardResultMap" type="com.spring.app.board.BoardVO">
    <id property="boardNum" column="BOARD_NUM" />
    <result property="userName" column="USERNAME" />
    <result property="boardTitle" column="BOARD_TITLE" />
    <result property="boardContents" column="BOARD_CONTENTS" />
    <result property="category" column="CATEGORY" />
    <result property="boardDate" column="BOARD_DATE" />
    <result property="updateAt" column="UPDATE_AT" />
    <result property="boardHits" column="BOARD_HITS" />
    <result property="likeCount" column="LIKE_COUNT" />
    <result property="commentCount" column="COMMENT_COUNT" />
    <result property="isSecret" column="IS_SECRET" />
  </resultMap>

  <!-- 6) 게시글 수정 -->
  <update id="update" parameterType="com.spring.app.board.BoardVO">
    UPDATE BOARD
    SET BOARD_TITLE = #{boardTitle},
        BOARD_CONTENTS = #{boardContents},
        CATEGORY = #{category},
        UPDATE_AT = CURRENT_TIMESTAMP,
        IS_SECRET = #{isSecret}
    WHERE BOARD_NUM = #{boardNum}
  </update>

  <!-- 7) 게시글 삭제 -->
  <delete id="delete" parameterType="com.spring.app.board.BoardVO">
    DELETE FROM BOARD WHERE BOARD_NUM = #{boardNum}
  </delete>

<update id="updateBoardHits" parameterType="long">
    UPDATE BOARD
      SET BOARD_HITS = BOARD_HITS + 1
    WHERE BOARD_NUM = #{boardNum}
</update>

  <!-- 9) 좋아요 수 증가 -->
  <update id="increaseLikeCount" parameterType="long">
    UPDATE BOARD SET LIKE_COUNT = LIKE_COUNT + 1 WHERE BOARD_NUM = #{boardNum}
  </update>

  <!-- 10) 좋아요 수 감소 -->
  <update id="decreaseLikeCount" parameterType="long">
    UPDATE BOARD SET LIKE_COUNT = LIKE_COUNT - 1 WHERE BOARD_NUM = #{boardNum}
  </update>

  <!-- 댓글 목록 조회 -->
  <select id="getCommentList" parameterType="com.spring.app.board.BoardVO" resultType="com.spring.app.board.comment.CommentVO">
    SELECT 
      COMMENT_NUM, 
      BOARD_NUM, 
      USERNAME, 
      COMMENT_DATE, 
      COMMENT_CONTENTS
    FROM COMMENTS
    WHERE BOARD_NUM = #{boardNum}
    ORDER BY COMMENT_DATE ASC
  </select>
    <select id="getCommentById" parameterType="long" resultType="com.spring.app.board.comment.CommentVO">
    SELECT COMMENT_NUM, BOARD_NUM, USERNAME, COMMENT_DATE, COMMENT_CONTENTS
    FROM COMMENTS
    WHERE COMMENT_NUM = #{commentNum}
  </select>

  <!-- 11) 댓글 수 증가 -->
  <update id="increaseCommentCount" parameterType="long">
    UPDATE BOARD SET COMMENT_COUNT = COMMENT_COUNT + 1 WHERE BOARD_NUM = #{boardNum}
  </update>

  <!-- 12) 댓글 수 감소 -->
  <update id="decreaseCommentCount" parameterType="long">
    UPDATE BOARD SET COMMENT_COUNT = COMMENT_COUNT - 1 WHERE BOARD_NUM = #{boardNum}
  </update>

  <!-- 13) 파일 업로드 -->
  <insert id="addFile" parameterType="com.spring.app.board.BoardFileVO" useGeneratedKeys="true" keyProperty="fileNum" keyColumn="FILE_NUM">
    INSERT INTO IMAGES (BOARD_NUM, FILE_NAME, ORI_NAME)
    VALUES (#{boardNum}, #{fileName}, #{oriName})
  </insert>

  <!-- 14) 파일 목록 -->
  <select id="getFileList" parameterType="long" resultType="com.spring.app.board.BoardFileVO">
    SELECT * FROM IMAGES WHERE BOARD_NUM = #{boardNum} ORDER BY FILE_NUM ASC
  </select>

  <!-- 15) 파일 상세 -->
  <select id="getFileDetail" parameterType="long" resultType="com.spring.app.board.BoardFileVO">
    SELECT * FROM IMAGES WHERE FILE_NUM = #{fileNum}
  </select>

  <!-- 16) 파일 삭제 -->
  <delete id="deleteFile" parameterType="long">
    DELETE FROM IMAGES WHERE FILE_NUM = #{fileNum}
  </delete>

  <!-- 17) 좋아요 여부 확인 -->
  <select id="isLiked" parameterType="com.spring.app.board.interaction.InteractionVO" resultType="boolean">
    SELECT COUNT(*) > 0 FROM BOARD_INTERACTION WHERE BOARD_NUM = #{boardNum} AND USERNAME = #{userName} AND TYPE = 'LIKE'
  </select>

  <!-- 18) 상호작용 추가 (좋아요 등) -->
  <insert id="addInteraction" parameterType="com.spring.app.board.interaction.InteractionVO">
    INSERT INTO BOARD_INTERACTION (BOARD_NUM, USERNAME, TYPE)
    VALUES (#{boardNum}, #{userName}, #{type})
  </insert>

  <!-- 19) 상호작용 삭제 (좋아요 취소 등) -->
  <delete id="removeInteraction" parameterType="com.spring.app.board.interaction.InteractionVO">
    DELETE FROM BOARD_INTERACTION WHERE BOARD_NUM = #{boardNum} AND USERNAME = #{userName} AND TYPE = #{type}
  </delete>

  <!-- 20) 상호작용 수 조회 (좋아요 수 등) - 누락된 메서드 추가 -->
  <select id="getInteractionCount" parameterType="com.spring.app.board.interaction.InteractionVO" resultType="long">
    SELECT COUNT(*) 
    FROM BOARD_INTERACTION 
    WHERE BOARD_NUM = #{boardNum} 
    AND TYPE = #{type}
    <if test="userName != null and userName != ''">
        AND USERNAME = #{userName}
    </if>
  </select>

  <!-- 23) 좋아요 수 조회 (기존 메서드 - 호환성 유지) -->
  <select id="getLikeCount" parameterType="long" resultType="long">
    SELECT COUNT(*) FROM BOARD_INTERACTION WHERE BOARD_NUM = #{boardNum} AND TYPE = 'LIKE'
  </select>

  <!-- 24) 비밀글 여부 확인 -->
<select id="checkSecret" parameterType="long" resultType="com.spring.app.board.BoardVO">
  SELECT COUNT(*) > 0 FROM BOARD WHERE BOARD_NUM = #{boardNum} AND IS_SECRET = 1
</select>

  <!-- 25) 비밀글 설정 변경 -->
<update id="updateSecret" parameterType="map">
  UPDATE BOARD SET IS_SECRET = #{isSecret} WHERE BOARD_NUM = #{boardNum}
</update>

  <!-- 26) 댓글 추가 -->
  <insert id="addComment" parameterType="com.spring.app.board.comment.CommentVO" useGeneratedKeys="true" keyProperty="commentNum" keyColumn="COMMENT_NUM">
    INSERT INTO COMMENTS (BOARD_NUM, USERNAME, COMMENT_CONTENTS, COMMENT_DATE)
    VALUES (#{boardNum}, #{userName}, #{commentContents}, CURRENT_TIMESTAMP)
  </insert>

  <!-- 27) 댓글 삭제 -->
  <delete id="deleteComment" parameterType="com.spring.app.board.comment.CommentVO">
    DELETE FROM COMMENTS WHERE COMMENT_NUM = #{commentNum}
  </delete>

</mapper>