<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.app.board.comment.CommentDAO">

  <!-- ▶ resultMap: COMMENTS 테이블 컬럼 → CommentVO 필드 매핑 -->
  <resultMap id="CommentResultMap" type="com.spring.app.board.comment.CommentVO">
    <id     column="COMMENT_NUM"         property="commentNum"         jdbcType="BIGINT"/>
    <result column="USERNAME"            property="userName"           jdbcType="VARCHAR"/>
    <result column="BOARD_NUM"           property="boardNum"           jdbcType="BIGINT"/>
    <result column="COMMENT_CONTENTS"    property="commentContents"    jdbcType="LONGVARCHAR"/>
    <result column="COMMENT_DATE"        property="commentDate"        jdbcType="TIMESTAMP"/>
    <result column="PARENT_COMMENT_NUM"  property="parentCommentNum"   jdbcType="BIGINT"/>
    <result column="COMMENT_DEPTH"       property="commentDepth"       jdbcType="INTEGER"/>
  </resultMap>

  <!-- 1) 최상위 댓글 추가 (서버 타임스탬프 자동) -->
  <insert id="addComment"
          parameterType="com.spring.app.board.comment.CommentVO"
          useGeneratedKeys="true"
          keyProperty="commentNum"
          keyColumn="COMMENT_NUM">
    INSERT INTO COMMENTS
      (BOARD_NUM, USERNAME, COMMENT_CONTENTS, COMMENT_DATE, PARENT_COMMENT_NUM, COMMENT_DEPTH)
    VALUES
      (#{boardNum}, #{userName}, #{commentContents}, CURRENT_TIMESTAMP, NULL, 0)
  </insert>

  <!-- 2) 대댓글 추가 -->
  <insert id="addReplyComment"
          parameterType="com.spring.app.board.comment.CommentVO"
          useGeneratedKeys="true"
          keyProperty="commentNum"
          keyColumn="COMMENT_NUM">
    INSERT INTO COMMENTS
      (BOARD_NUM, USERNAME, COMMENT_CONTENTS, COMMENT_DATE, PARENT_COMMENT_NUM, COMMENT_DEPTH)
    VALUES
      (#{boardNum}, #{userName}, #{commentContents}, CURRENT_TIMESTAMP, #{parentCommentNum}, #{commentDepth})
  </insert>

  <!-- 3) 댓글 삭제 (작성자 or admin) -->
  <delete id="deleteComment"
          parameterType="com.spring.app.board.comment.CommentVO">
    DELETE FROM COMMENTS
    WHERE COMMENT_NUM = #{commentNum}
      AND BOARD_NUM  = #{boardNum}
      AND (
           #{userName} = 'admin'
           OR USERNAME = #{userName}
          )
  </delete>

  <!-- 댓글 목록 조회 (트리 정렬) -->
  <select id="getCommentList" parameterType="long" resultMap="CommentResultMap">
    SELECT 
      COMMENT_NUM, BOARD_NUM, USERNAME, COMMENT_CONTENTS, COMMENT_DATE, PARENT_COMMENT_NUM, COMMENT_DEPTH
    FROM COMMENTS
    WHERE BOARD_NUM = #{boardNum}
    ORDER BY
      CASE WHEN PARENT_COMMENT_NUM IS NULL THEN COMMENT_NUM ELSE PARENT_COMMENT_NUM END ASC,
      COMMENT_DEPTH ASC,
      COMMENT_DATE ASC
  </select>

</mapper>
