<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.app.board.comment.CommentDAO">

  <!-- ▶ resultMap: COMMENTS 테이블 컬럼 → CommentVO 필드 매핑 -->
  <resultMap id="CommentResultMap" type="com.spring.app.board.comment.CommentVO">
    <id     column="COMMENT_ID"       property="commentId"       jdbcType="BIGINT"/>
    <result column="USERNAME"         property="userName"        jdbcType="VARCHAR"/>
    <result column="BOARD_NUM"        property="boardNum"        jdbcType="BIGINT"/>
    <result column="COMMENT_CONTENTS" property="commentContents" jdbcType="LONGVARCHAR"/>
    <result column="COMMENT_DATE"     property="commentDate"     jdbcType="TIMESTAMP"/>
  </resultMap>

  <!-- 1) 댓글 추가 (자동으로 서버 타임스탬프 사용) -->
  <insert id="addComment"
          parameterType="com.spring.app.board.comment.CommentVO"
          useGeneratedKeys="true"
          keyProperty="commentId"
          keyColumn="COMMENT_ID">
    INSERT INTO COMMENTS
      (BOARD_NUM, USERNAME, COMMENT_CONTENTS, COMMENT_DATE)
    VALUES
      (#{boardNum}, #{userName}, #{commentContents}, CURRENT_TIMESTAMP)
  </insert>

  <!-- 2) 특정 게시글의 댓글 목록 조회 -->
  <select id="getCommentList"
          parameterType="long"
          resultMap="CommentResultMap">
    SELECT
      COMMENT_ID,
      USERNAME,
      BOARD_NUM,
      COMMENT_CONTENTS,
      COMMENT_DATE
    FROM COMMENTS
    WHERE BOARD_NUM = #{boardNum}
    ORDER BY COMMENT_DATE ASC, COMMENT_ID ASC
  </select>

  <!-- 3) 댓글 삭제 (작성자 or admin) -->
  <delete id="deleteComment"
          parameterType="com.spring.app.board.comment.CommentVO">
    DELETE FROM COMMENTS
    WHERE COMMENT_ID = #{commentId}
      AND BOARD_NUM  = #{boardNum}
      AND (
           #{userName} = 'admin'
           OR USERNAME = #{userName}
          )
  </delete>

</mapper>
